<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Soukthavy Sopha (Posts about Linux)</title><link>http://souktha.github.io/</link><description></description><atom:link href="http://souktha.github.io/categories/cat_linux.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sun, 24 Jan 2021 02:17:16 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Adding a custom ARM platform to QEMU 5.2.0</title><link>http://souktha.github.io/software/qemu-port/</link><dc:creator>Soukthavy</dc:creator><description>&lt;div&gt;&lt;p&gt;The SoC is being developed by the ASIC team, but the software team wants to develop the software concurrently
for the hardware that is not yet available, at least not for another 3 months or longer. In this situation what do
you do ?&lt;/p&gt;
&lt;p&gt;&lt;a href="http://souktha.github.io/software/qemu-port/"&gt;Read more…&lt;/a&gt; (12 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>software</category><guid>http://souktha.github.io/software/qemu-port/</guid><pubDate>Sat, 02 Jan 2021 17:19:03 GMT</pubDate></item><item><title>Zynq SPI slave stepper motor driver</title><link>http://souktha.github.io/software/zynq_spi_stepper_sw/</link><dc:creator>Soukthavy</dc:creator><description>&lt;div&gt;&lt;p&gt;The Linux SPI slave device driver is to enable user access to SPI slave stepper motor FPGA design in my other post
&lt;a class="reference external" href="http://souktha.github.io/hardware/zybo-spi-stepper"&gt;http://souktha.github.io/hardware/zybo-spi-stepper&lt;/a&gt; . This is the software part of that implementation on the Zybo Zynq7000.
I reuse the original SPI slave I wrote earlier and expand its functionality a little bit more so that I can send
the step count to the stepper motor.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://souktha.github.io/software/zynq_spi_stepper_sw/"&gt;Read more…&lt;/a&gt; (3 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>software</category><guid>http://souktha.github.io/software/zynq_spi_stepper_sw/</guid><pubDate>Thu, 17 Nov 2016 00:40:47 GMT</pubDate></item><item><title>Decoupling Xilinx Zynq PS and PL on Linux for Digilent Zybo</title><link>http://souktha.github.io/software/zybo-quickstart/</link><dc:creator>Soukthavy</dc:creator><description>&lt;div&gt;&lt;p&gt;Digilent Zybo board is built around Xilinx Zynq-7000 family [&lt;a class="reference internal" href="http://souktha.github.io/software/zybo-quickstart/#id1"&gt;1&lt;/a&gt;]. This Zynq-7000 is integrated with a dual-core
ARM Cortex-A9 processor that has Linux support for it. In addition to this PS unit, the Xilinx 7-series
FPGA is also integrated as the PL component of this SoC [&lt;a class="reference internal" href="http://souktha.github.io/software/zybo-quickstart/#id2"&gt;2&lt;/a&gt;]. This demonstation will show how easy it is
to decouple PS and PL components.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://souktha.github.io/software/zybo-quickstart/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>hardware</category><category>software</category><guid>http://souktha.github.io/software/zybo-quickstart/</guid><pubDate>Sat, 23 Apr 2016 19:08:20 GMT</pubDate></item><item><title>Creating an IR receiver on AM335x BeagleBone Black</title><link>http://souktha.github.io/software/bblk-ir/</link><dc:creator>Soukthavy</dc:creator><description>&lt;div&gt;&lt;p&gt;What I like about working with TI based platform is their easily accessible documentations. It is by far the most
developers friendly unlike other chip vendors. This accessibility has enable me to experiment with the on-chip I/O
subsystem components.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://souktha.github.io/software/bblk-ir/"&gt;Read more…&lt;/a&gt; (11 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>software</category><guid>http://souktha.github.io/software/bblk-ir/</guid><pubDate>Sat, 02 Apr 2016 15:39:02 GMT</pubDate></item><item><title>Redirect tty login from ssh to UART port</title><link>http://souktha.github.io/software/tty2comport/</link><dc:creator>Soukthavy</dc:creator><description>&lt;div class="section" id="objective"&gt;
&lt;h2&gt;Objective&lt;/h2&gt;
&lt;p&gt;When I ssh from remote host machine to my local machine, say from outside place to host machine at home, I would
like to directly access a device that is connected by serial console to my local machine, for example, a beaglebone black
board that is connected to my home PC serial console ttyUSB0. I implemented a simple console server for this purpose.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://souktha.github.io/software/tty2comport/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>software</category><guid>http://souktha.github.io/software/tty2comport/</guid><pubDate>Fri, 18 Mar 2016 03:15:48 GMT</pubDate></item></channel></rss>