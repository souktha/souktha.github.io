<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" version="2.0"><channel><title>Soukthavy Sopha (software)</title><link>http://souktha.github.io/</link><description></description><atom:link href="http://souktha.github.io/categories/software.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><lastBuildDate>Sun, 24 Apr 2016 22:02:05 GMT</lastBuildDate><generator>https://getnikola.com/</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Decoupling Xilinx Zynq PS and PL on Linux for Digilent Zybo</title><link>http://souktha.github.io/software/zybo-quickstart/</link><dc:creator>Soukthavy</dc:creator><description>&lt;div&gt;&lt;p&gt;Digilent Zybo board is built around Xilinx Zynq-7000 family [&lt;a class="reference internal" href="http://souktha.github.io/software/zybo-quickstart/#id1"&gt;1&lt;/a&gt;]. This Zynq-7000 is integrated with a dual-core
ARM Cortex-A9 processor that has Linux support for it. In addition to this PS unit, the Xilinx 7-series
FPGA is also integrated as the PL component of this SoC [&lt;a class="reference internal" href="http://souktha.github.io/software/zybo-quickstart/#id2"&gt;2&lt;/a&gt;]. This demonstation will show how easy it is
to decouple PS and PL components.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://souktha.github.io/software/zybo-quickstart/"&gt;Read more…&lt;/a&gt; (5 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>hardware</category><category>software</category><guid>http://souktha.github.io/software/zybo-quickstart/</guid><pubDate>Sat, 23 Apr 2016 19:08:20 GMT</pubDate></item><item><title>Creating an IR receiver on AM335x BeagleBone Black</title><link>http://souktha.github.io/software/bblk-ir/</link><dc:creator>Soukthavy</dc:creator><description>&lt;div&gt;&lt;p&gt;What I like about working with TI based platform is their easily accessible documentations. It is by far the most
developers friendly unlike other chip vendors. This accessibility has enable me to experiment with the on-chip I/O
subsystem components.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://souktha.github.io/software/bblk-ir/"&gt;Read more…&lt;/a&gt; (11 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>software</category><guid>http://souktha.github.io/software/bblk-ir/</guid><pubDate>Sat, 02 Apr 2016 15:39:02 GMT</pubDate></item><item><title>Redirect tty login from ssh to UART port</title><link>http://souktha.github.io/software/tty2comport/</link><dc:creator>Soukthavy</dc:creator><description>&lt;div class="section" id="objective"&gt;
&lt;h2&gt;Objective&lt;/h2&gt;
&lt;p&gt;When I ssh from remote host machine to my local machine, say from outside place to host machine at home, I would
like to directly access a device that is connected by serial console to my local machine, for example, a beaglebone black
board that is connected to my home PC serial console ttyUSB0. I implemented a simple console server for this purpose.&lt;/p&gt;
&lt;p&gt;&lt;a href="http://souktha.github.io/software/tty2comport/"&gt;Read more…&lt;/a&gt; (2 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>software</category><guid>http://souktha.github.io/software/tty2comport/</guid><pubDate>Fri, 18 Mar 2016 03:15:48 GMT</pubDate></item></channel></rss>